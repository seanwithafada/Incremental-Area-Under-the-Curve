t<-c(0,15,30,45,60,75,90,105,120)
v<-c(15,20,30,40,15,10,5,15,25)

(AUC<-data.frame(t,v))

n_auc.fn <- function(x,y) {
  auc <- ifelse(y[2] > y[1], (y[2]-y[1])*(x[2]-x[1])/2, 0) 
  seg.type <- 0
  for (i in 3:length(x)) {
    if (y[i] >= y[1] & y[i-1] >= y[1]) { 
      auc[i-1] <- (((y[i]-y[1])/2) + (y[i-1]-y[1])/2) * (x[i]-x[i-1]) 
      seg.type[i-1] <- 1
    } else if (y[i] >= y[1] & y[i-1] < y[1]) { 
      auc[i-1] <- ((y[i]-y[1])^2/(y[i]-y[i-1])) * (x[i]-x[i-1])/2+ # positive area
        ((y[i-1]-y[1])^2/(y[i-1]-y[i])) * (x[i]-x[i-1])/2 # negative area
      seg.type[i-1] <- 2
    } else if (y[i] < y[1] & y[i-1] >= y[1]) { 
      auc[i-1] <- ((y[i]-y[1])^2/(y[i]-y[i-1])) * (x[i]-x[i-1])/2+ # negative area
        ((y[i-1]-y[1])^2/(y[i-1]-y[i])) * (x[i]-x[i-1])/2 # positive area
      seg.type[i-1] <- 3
    } else if (y[i] < y[1] & y[i-1] < y[1]) { 
      auc[i-1] <- (((y[i]-y[1])/2) + (y[i-1]-y[1])/2) * (x[i]-x[i-1])
      seg.type[i-1] <- 4
    } else {
      # The above cases are exhaustive, so this should never happpen
      return(cat("i:", i, "Error: No condition met\n"))
    }
  }
  return(list(auc=sum(auc), segments=auc, seg.type=seg.type))
}

# Compute positive nAUC
(nAUC <- n_auc.fn(AUC$t, AUC$v))
nAUC$auc
